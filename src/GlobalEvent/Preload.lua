---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Bergi.
--- DateTime: 11.03.2021 1:23
---
do
    local InitGlobalsOrigin = InitGlobals
    function InitGlobals()
        InitGlobalsOrigin()
        PreloadigLags()
        TimerStart(CreateTimer(), 1, false, function()
            InitTrig_SyncLoadDone()
            InitPreloadStart()
            DestroyTimer(GetExpiredTimer())
        end)
    end
end

function PreloadigLags()
    local temp = CreateUnit(Player(0), FourCC("uzig"), OutPoint, OutPoint, 0)
    KillUnit(temp)
    temp = CreateUnit(Player(0), FourCC("uabo"), OutPoint, OutPoint, 0)
    KillUnit(temp)
    temp = CreateUnit(Player(0), FourCC("u000"), OutPoint, OutPoint, 0)
    KillUnit(temp)
end

function InitPreloadStart()
    --print("Start preload tester")
    --PreloadGenClear()
    SavePath = "save\\PeonRPG2.txt"
    Preloader(SavePath) --в этот момент данные записываются в имя способности, для каждого игрока свои данные
    local s = BlzGetAbilityTooltip(FourCC('Agyv'), 0) --переменная S хранит асинхронные данные
    --print("AAAAAAA "..s)
    BlzSendSyncData("myprefix", s)
    --for i = 0, bj_MAX_PLAYER_SLOTS - 1 do
    local i = 0
    TimerStart(CreateTimer(), .2, true, function()
        if IsPlayerSlotState(Player(i), PLAYER_SLOT_STATE_PLAYING) and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
            local data = HERO[i]
            local restoreGold = 0
            --print("Обработка игрока " .. i)

            --if #(udg_LoadCode[i]) > 10 then
            --    udg_LoadCode[i]=50
            --    print("FirstGame")
            --end
            if not udg_LoadCode[i] then
                udg_LoadCode[i] = 50
            end

            --restoreGold = SyncString(Player(i), I2S(s)) -- ЭТА СТРОЧКА КРАШИТ ВАР

            --print(i)
            --TimerStart(CreateTimer(), 0.1, false, function()
            --print("итоговое значение для "..i)
            --print(udg_LoadCode[i])
            --print(GetPlayerName(Player(i)) .. " перенес золота из прошлой игры " ..(udg_LoadCode[i]))

            if udg_LoadCode[i] then
                if tonumber(LoadedGold[i]) then
                else
                    LoadedGold[i] = 50
                    LoadedGameCount[i] = 0
                    --print("FirstGame")
                end
                print(GetPlayerName(Player(i)) .. " Число завершенных игр " .. LoadedGameCount[i])
                LoadedGameCount[i] = LoadedGameCount[i] + 1
                UnitAddGold(data.UnitHero, LoadedGold[i])
            else
                --i=i-1
            end
            --end)
        end
        i = i + 1
        if i >= bj_MAX_PLAYER_SLOTS - 1 then
            --print("Таймер сделал своё дело")
            DestroyTimer(GetExpiredTimer())
        end
    end)

end

function SyncString(p, val)
    if (GetLocalPlayer() == p) then
        StoreString(cache, "", "", val)
    end
    TriggerSyncStart()
    if (GetLocalPlayer() == p) then
        SyncStoredString(cache, "", "")
    end
    TriggerSleepAction(2) -- меньшнее   значение    вызывает    десинх
    TriggerSyncReady()
    return GetStoredString(cache, "", "")
end

udg_LoadCode = {}
LoadedGold = {}
LoadedGameCount = {}
function InitTrig_SyncLoadDone ()
    local gg_trg_SyncLoadDone = CreateTrigger()
    for i = 0, bj_MAX_PLAYER_SLOTS - 1 do
        BlzTriggerRegisterPlayerSyncEvent(gg_trg_SyncLoadDone, Player(i), "myprefix", false)
    end
    TriggerAddAction(gg_trg_SyncLoadDone, function()
        local prefix = BlzGetTriggerSyncPrefix()
        local value = BlzGetTriggerSyncData()
        local i = GetPlayerId(GetTriggerPlayer())
        --print("SyncData="..value)
        if prefix == "myprefix" then
            local t = split(value, ",")-- разрезаем наталицу отдельныйх данных
            udg_LoadCode[i] = value
            LoadedGold[i] = t[1]
            LoadedGameCount[i] = t[2]
            --print(t[2])
            if #value > 10 then
                --игрок первый раз играет
                udg_LoadCode[i] = 0
                LoadedGold[i] = 0
                LoadedGameCount[i] = 0
            end
            if not LoadedGameCount[i] then
                LoadedGameCount[i] = 0
            end
            --print("udg_LoadCode"..i.."="..udg_LoadCode[i])
        end
    end)
end

function split(str, sep)
    if sep == nil then
        local words = {}
        for word in str:gmatch("%%w+") do
            table.insert(words, word)
        end
        return words
    end
    return { str:match((str:gsub("[^" .. sep .. "]*" .. sep, "([^" .. sep .. "]*)" .. sep))) } -- BUG!! doesnt return last value
end

function SaveResult(SaveCode)
    Preload("\")\ncall BlzSetAbilityTooltip ('Agyv',\"" .. SaveCode .. "\",0)" .. "\n//")
    PreloadGenEnd(SavePath)
    PreloadGenClear()
end